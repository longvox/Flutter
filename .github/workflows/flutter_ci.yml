name: Flutter CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test and analyze
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.x'
          channel: 'stable'
          cache: true

      - name: Install dependencies
        run: flutter pub get

      - name: Verify formatting
        run: dart format --output=none --set-exit-if-changed .

      - name: Run tests
        run: flutter test --coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Notify Slack - Build Completed
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"text":"Build version ${GITHUB_REF} completed successfully!"}' ${{ secrets.SLACK_WEBHOOK_URL }}


  build-android:
    name: Build Android App
    needs: test
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.x'
          channel: 'stable'
          cache: true

      - name: Install dependencies
        run: flutter pub get

      - name: Build debug APK
        run: flutter build apk --debug
      #
      # - name: Create key.properties
      #   run: |
      #     echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" > android/key.properties
      #     echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
      #     echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
      #     echo "storeFile=keystore.jks" >> android/key.properties
      #
      # - name: Decode Keystore
      #   run: |
      #     echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > android/app/keystore.jks
      #
      # - name: Build signed AAB
      #   run: flutter build appbundle --release
      #
      # - name: Authenticate to Google Cloud
      #   uses: 'google-github-actions/auth@v2'
      #   with:
      #     credentials_json: '${{ secrets.GCLOUD_AUTH }}'
      #
      # - name: Set up Cloud SDK
      #   uses: 'google-github-actions/setup-gcloud@v2'
      #
      # - name: Upload AAB to bucket
      #   run: |
      #     BUCKET_NAME="longvox_test_flutter"
      #     TIMESTAMP=$(date +"%Y%m%d_%H%M%S")
      #     gcloud storage cp build/app/outputs/bundle/release/app-release.aab gs://$BUCKET_NAME/aab/app-release-$TIMESTAMP.aab
      #
      - name: Upload debug APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: build/app/outputs/flutter-apk/app-debug.apk

      - name: Notify Slack - Build Completed
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"text":"Build signed AAB for version ${GITHUB_REF} completed successfully!"}' ${{ secrets.SLACK_WEBHOOK_URL }}



  firebase-test-lab:
    name: Run UI tests with Firebase Test Lab
    needs: build-android
    runs-on: ubuntu-22.04
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - uses: actions/checkout@v4

      - name: Download app APK
        uses: actions/download-artifact@v4
        with:
          name: app-debug
          path: app-debug

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCLOUD_AUTH }}'

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: Install beta components
        run: |
          gcloud components install beta --quiet
          gcloud components update --quiet

      - name: Notify Slack - Run tests in Firebase Test Lab
          run: |
            curl -X POST -H 'Content-type: application/json' --data '{"text":"Run tests in Firebase Test Lab"}' ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Run tests in Firebase Test Lab
        run: |
          BUCKET_NAME="longvox_test_flutter"
          TIMESTAMP=$(date +"%Y%m%d_%H%M%S")
          gcloud firebase test android run \
            --type robo \
            --app app-debug/app-debug.apk \
            --device model=Pixel2,version=28,locale=en \
            --timeout 300s \
            --results-bucket=gs://$BUCKET_NAME \
            --results-dir=results-$TIMESTAMP \
            --robo-directives=text:emailTextField=eve.holt@reqres.in,text:passwordTextField=pistol \
            --quiet

      - name: Notify Slack - Tests Completed
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"text":"UI tests in Firebase Test Lab completed successfully!"}' ${{ secrets.SLACK_WEBHOOK_URL }}

  # deploy-play-store:
  #   name: Deploy to Play Store
  #   needs: [test, build-android]
  #   runs-on: ubuntu-22.04
  #   if: github.ref == 'refs/heads/main' && github.event_name == 'push'
  #
  #   steps:
  #     - uses: actions/checkout@v4
  #
  #     - name: Set up JDK 17
  #       uses: actions/setup-java@v4
  #       with:
  #         java-version: '17'
  #         distribution: 'temurin'
  #         cache: 'gradle'
  #
  #     - name: Setup Flutter
  #       uses: subosito/flutter-action@v2
  #       with:
  #         flutter-version: '3.x'
  #         channel: 'stable'
  #         cache: true
  #
  #     - name: Decode Keystore
  #       run: |
  #         echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > android/app/keystore.jks
  #
  #     - name: Create key.properties
  #       run: |
  #         echo "storeFile=keystore.jks" > android/key.properties
  #         echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" >> android/key.properties
  #         echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
  #         echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
  #
  #     - name: Build Release AAB
  #       run: |
  #         flutter pub get
  #         flutter build appbundle --release
  #
  #     - name: Deploy to Play Store
  #       uses: r0adkll/upload-google-play@v1
  #       with:
  #         serviceAccountJsonPlainText: ${{ secrets.PLAY_STORE_SERVICE_ACCOUNT_JSON }}
  #         packageName: com.example.flutter_getx_boilerplate
  #         releaseFiles: build/app/outputs/bundle/release/app-release.aab
  #         track: internal
  #         status: completed
  #         changesNotSentForReview: false
  #
  # build-ios:
  #   name: Build iOS App
  #   needs: test
  #   runs-on: macos-latest
  #
  #   steps:
  #     - uses: actions/checkout@v3
  #
  #     - name: Setup Flutter
  #       uses: subosito/flutter-action@v2
  #       with:
  #         flutter-version: '3.x'
  #         channel: 'stable'
  #         cache: true
  #
  #     - name: Install dependencies
  #       run: flutter pub get
  #
  #     - name: Build iOS
  #       run: flutter build ios --release --no-codesign

  # build-web:
  #   name: Build Web App
  #   needs: test
  #   runs-on: ubuntu-latest
  #
  #   steps:
  #     - uses: actions/checkout@v3
  #
  #     - name: Setup Flutter
  #       uses: subosito/flutter-action@v2
  #       with:
  #         flutter-version: '3.x'
  #         channel: 'stable'
  #         cache: true
  #
  #     - name: Install dependencies
  #       run: flutter pub get
  #
  #     - name: Build Web
  #       run: flutter build web --release
  #
  #     - name: Upload Web artifact
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: web-build
  #         path: build/web
